{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/Acdev/Documents/pagina-checkout/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTarget = void 0;\n\nconst isPlainObj = require(\"is-plain-obj\");\n\nconst logger_1 = require(\"./logger\");\n\nconst logger = logger_1.getInstance();\n\nfunction getTarget(_x, _x2) {\n  return _getTarget.apply(this, arguments);\n}\n\nfunction _getTarget() {\n  _getTarget = _asyncToGenerator(function* (req, config) {\n    let newTarget;\n    const router = config.router;\n\n    if (isPlainObj(router)) {\n      newTarget = getTargetFromProxyTable(req, router);\n    } else if (typeof router === 'function') {\n      newTarget = yield router(req);\n    }\n\n    return newTarget;\n  });\n  return _getTarget.apply(this, arguments);\n}\n\nexports.getTarget = getTarget;\n\nfunction getTargetFromProxyTable(req, table) {\n  let result;\n  const host = req.headers.host;\n  const path = req.url;\n  const hostAndPath = host + path;\n\n  for (const [key] of Object.entries(table)) {\n    if (containsPath(key)) {\n      if (hostAndPath.indexOf(key) > -1) {\n        // match 'localhost:3000/api'\n        result = table[key];\n        logger.debug('[HPM] Router table match: \"%s\"', key);\n        break;\n      }\n    } else {\n      if (key === host) {\n        // match 'localhost:3000'\n        result = table[key];\n        logger.debug('[HPM] Router table match: \"%s\"', host);\n        break;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction containsPath(v) {\n  return v.indexOf('/') > -1;\n}","map":null,"metadata":{},"sourceType":"script"}